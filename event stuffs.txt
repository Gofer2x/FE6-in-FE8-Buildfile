CAM1 [Position X, Position Y]
	Move camera to coords.
CAM1 Character 
	Move camera to character (BYTE).

FADI Time
	Fade into dark at speed of Time (SHORT).

FADU Time
	Fade out of dark at speed of Time (SHORT).
	
FAWI Time
FAWU Time
	Ditto but white (SHORT).

MOVE Speed Character [Dest. X, Dest. Y] 
	
ENDA
	End event.
	Add "NoFade" before it to not have the fade effect! You want this most of the time.
	
SOUN Sound
	Plays a Sound.

MUSC MusicID
	Changes music.

MUSS MusicID
	Changes music while saving the previous song
    so you can restore it with MURE.
	
MUSCMID 0x7FFF
	Fade music out??





TILECHANGE TileChange

TILEREVERSE TileChange
	
BEQ *Conditional ID* *Memory Slot 1* *Memory Slot 2* 

    These commands compare two memory slots and branch to LABEL *conditional ID* if the condition is met
   Branch if equal

   Parameters:
    Conditional ID
    Memory Slot 1
    Memory Slot 2
	
	
(eventID = Flag)
//Turn based events
TurnEventPlayer(eventID,pointer,turn)
TurnEventPlayer(eventID,pointer,startTurn,amountOfTurns)
TurnEventEnemy(eventID,pointer,turn)
TurnEventEnemy(eventID,pointer,startTurn,amountOfTurns)
TurnEventNPC(eventID,pointer,turn)
TurnEventNPC(eventID,pointer,startTurn,amountOfTurns)
Survive(pointer,endturn)
OpeningTurnEvent(pointer)

//Character based events
#define CharacterEvent(eventID,pointer,char1,char2)
#define CharacterEvent(eventID,pointer,char1,char2,afterID)
#define CharacterEventBothWays(eventID,eventPtr,char1,char2)




//Location Based Events
Village(eventID,offset,villX,villY)    
House(eventID,offset,villX,villY)      
Armory(offset,shopX,shopY)             
Vendor(offset,shopX,shopY)             
SecretShop(offset,shopX,shopY)      
Chest(item,chestX,chestY)              
ChestMoney(amountOfMoney,chestX,chestY)
Door(doorX,doorY)                      
Seize(seizeX,seizeY)                   
Seize(eventID,offset,seizeX,seizeY)    
	
VillageEventItem(textID,background,item)
VillageEventMoney(textID,background,money)
HouseEvent(textID,background)
ConvoEvent(textID)


LoadReinforcements(unitPtr)
ReinforcementEvent(unitPtr)
GiveMoney(amount)
	
MoveByCoords(speed, srcX, srcY, destX, destY)


	
LOAD1 commands are generally used for loading units who are actively involved in gameplay. It’s used for loading player units who join the party, and enemy/NPC units who start on the map. The primary LOAD1 command is “Load units and move. If player unit, join party (LOAD1+ENUN)”.

LOAD2 commands are generally used for loading specific units in cutscenes. Player units loaded with LOAD2 will not join the party (though of course, it won’t remove units who are already in the party), so it’s useful for when you need to show blue NPCs. The primary LOAD2 command is “Load units and move (LOAD2+ENUN)”.

LOAD3 is a bit different, and its name in FEBuilder, “load player units for cutscenes”, is a bit misleading. Like the other LOAD commands, LOAD3 takes in a unit group, but the units loaded will not actually be the ones shown in the Unit Placer. Instead, LOAD3 will load the first X units of the player’s current party, based on recent deployment order, in order of the slots in the Unit Placer list. This can be useful for cutscenes where you need to show a large group of the player’s units but don’t need to specify which ones in particular.
	
	
	
	
	
Text(Text)
	Displays Text. Return to map included.
	
Text(Background, Text)
	Displays Text with background.  Return to map included.

FlashCursor(Character, Duration)

FlashCursor(X, Y, Duration)

SetBackground(Background)
	Sets a Background.

ShowText(Text)
	Displays Text, but doesn't return to map.
	





at the top of your file you will see POIN Units Units, it's there twice because the first one is normal mode and the second one is hard mode. if you edited that to be POIN NormalUnits HardUnits or whatever, you can have a different unit setup depending on difficulty
it should be in eastdlib